---
version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.7
    commands:
      - echo 'about to call dockerd'
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator
      - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.9/2024-01-04/bin/linux/amd64/kubectl
      - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.27.9/2024-01-04/bin/linux/amd64/kubectl.sha256
      - sha256sum -c kubectl.sha256
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
      - python --version
      - echo 'export PATH=$PWD/:$PATH' >> $HOME/.bashrc
      - echo `kubectl version --short --client`
      - python -m pip install --upgrade --force pip
      - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add
      - apt-get update && apt-get -y install jq  && pip install --upgrade awscli pytest

  pre_build:
    commands:
      - echo "Creating TAG"
      - export REPOSITORY_NAME="flask-api"
      - export REPOSITORY_BRANCH="main"
      - export ENVIRONMENT_NAME="dev"
      - export REPOSITORY_URI="851725552373.dkr.ecr.ap-southeast-2.amazonaws.com/flask-api"
      - export EKS_CLUSTER_NAME="flask-api"
      - export EKS_KUBECTL_ROLE_ARN="arn:aws:iam::851725552373:role/service-role/flask-role"
      - export TAG="${REPOSITORY_NAME}${REPOSITORY_BRANCH}${ENVIRONMENT_NAME}"
      - sed -i "s@CONTAINER_IMAGE@${REPOSITORY_URI}:${TAG}@" simple_jwt_api.yml
      - $(aws ecr get-login --no-include-email)
      - export KUBECONFIG="$HOME/.kube/config"
      - echo "REPOSITORY_URI: $REPOSITORY_URI"
      - echo "TAG: $TAG"
      - echo "EKS_CLUSTER_NAME: $EKS_CLUSTER_NAME"
      - echo "EKS_KUBECTL_ROLE_ARN: $EKS_KUBECTL_ROLE_ARN"
      - echo `ls -l`
      - pip install -r requirements.txt

  build:
    commands:
      - docker build --tag $REPOSITORY_URI:$TAG .

  post_build:
    commands:
      - docker push $REPOSITORY_URI:$TAG
      - echo "EKS_CLUSTER_NAME: $EKS_CLUSTER_NAME"
      - echo "EKS_KUBECTL_ROLE_ARN: $EKS_KUBECTL_ROLE_ARN"
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --role-arn $EKS_KUBECTL_ROLE_ARN
      - kubectl apply -f simple_jwt_api.yml
      - printf '[{"name":"simple_jwt_api","imageUri":"%s"}]' $REPOSITORY_URI:$TAG > build.json

artifacts:
  files: build.json

env:
  parameter-store:
    JWT_SECRET: JWT_SECRET
