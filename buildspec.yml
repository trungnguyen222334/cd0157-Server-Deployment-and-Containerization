version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.7
    commands:
      - echo 'Installing Docker'
      - apt-get update
      - apt-get install -y docker.io
      - service docker start
      - docker --version
      - echo 'Docker installed and running.'
      - echo 'about to call dockerd'
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - curl -O https://amazon-eks.s3-us-west-2.amazonaws.com/1.27.9/2024-01-04/bin/linux/amd64/kubectl
      - curl -O https://amazon-eks.s3-us-west-2.amazonaws.com/1.27.9/2024-01-04/bin/linux/amd64/kubectl.sha256
      - sha256sum -c kubectl.sha256
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - kubectl version --client
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD:$PATH
      - export KUBECONFIG=$HOME/.kube/config
      - python --version
      - python -m pip install --upgrade pip
      - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add
      - apt-get update && apt-get -y install jq && pip install --upgrade awscli pytest

  pre_build:
    commands:
      - TAG="$REPOSITORY_NAME.$REPOSITORY_BRANCH.$ENVIRONMENT_NAME.$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
      - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$TAG"'@' simple_jwt_api.yml
      - $(aws ecr get-login --no-include-email)
      - echo `ls -l`
      - pip install -r requirements.txt

  build:
    commands:
      - docker build --tag $REPOSITORY_URI:$TAG .

  post_build:
    commands:
      - docker push $REPOSITORY_URI:$TAG
      - echo $EKS_CLUSTER_NAME
      - echo $EKS_KUBECTL_ROLE_ARN
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --role-arn $EKS_KUBECTL_ROLE_ARN
      - kubectl apply -f simple_jwt_api.yml
      - printf '[{"name":"simple_jwt_api","imageUri":"%s"}]' $REPOSITORY_URI:$TAG > build.json

artifacts:
  files: build.json

env:
  parameter-store:
    JWT_SECRET: JWT_SECRET
